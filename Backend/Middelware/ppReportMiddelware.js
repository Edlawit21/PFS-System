const Pharmacist = require("../Models/PharmacyM/pharmacistRegModel");
const SalesReport = require("../Models/Pharmacist/salesReportModel");

// Middleware to ensure pharmacist can only access their own data
const authorizePharmacist = async (req, res, next) => {
  const { pharmacistId } = req.params; // or from req.query, req.body as needed

  if (req.user.role !== "pharmacist") {
    return res.status(403).json({ msg: "Access denied" });
  }

  if (req.user._id.toString() !== pharmacistId) {
    return res.status(403).json({ msg: "You can only access your own data" });
  }

  next();
};

// Middleware to ensure pharmacy manager can only access data of pharmacists they created
const authorizePharmacyManager = async (req, res, next) => {
  const { pharmacistId } = req.params; // or from req.query, req.body as needed

  if (req.user.role !== "pharmacyManager") {
    return res.status(403).json({ msg: "Access denied" });
  }

  // Check if the pharmacist belongs to the pharmacy manager
  const pharmacist = await Pharmacist.findById(pharmacistId);
  if (!pharmacist) {
    return res.status(404).json({ msg: "Pharmacist not found" });
  }

  if (pharmacist.createdBy.toString() !== req.user._id.toString()) {
    return res
      .status(403)
      .json({ msg: "You can only access pharmacists you created" });
  }

  next();
};

// Middleware to ensure pharmacy manager can only view reports generated by their pharmacists
const authorizeReportAccess = async (req, res, next) => {
  const { role, pharmacistId } = req.query;

  if (role === "pharmacist") {
    // Pharmacists can only access their own reports
    if (req.user._id.toString() !== pharmacistId) {
      return res
        .status(403)
        .json({ msg: "You can only access your own reports" });
    }
  } else if (role === "pharmacyManager") {
    // Pharmacy managers can only access reports of their own pharmacists
    const pharmacist = await Pharmacist.findById(pharmacistId);
    if (!pharmacist) {
      return res.status(404).json({ msg: "Pharmacist not found" });
    }

    if (pharmacist.createdBy.toString() !== req.user._id.toString()) {
      return res.status(403).json({
        msg: "You can only access reports of pharmacists you created",
      });
    }
  } else {
    return res.status(403).json({ msg: "Access denied" });
  }

  next();
};

module.exports = {
  authorizePharmacist,
  authorizePharmacyManager,
  authorizeReportAccess,
};
